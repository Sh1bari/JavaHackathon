version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgresmain:
    image: mirror.gcr.io/postgres:16.4-alpine
    hostname: postgresmain
    container_name: postgresmain
    restart: always
    environment:
      - POSTGRES_DB=postgresmain
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - postgresmain:/var/lib/postgresql/data
      - ./init/main:/docker-entrypoint-initdb.d/

  postgresmock:
    image: mirror.gcr.io/postgres:16.4-alpine
    hostname: postgresmock
    container_name: postgresmock
    restart: always
    environment:
      - POSTGRES_DB=postgresmock
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgresmock:/var/lib/postgresql/data

  miniohack:
    image: mirror.gcr.io/minio/minio:latest
    container_name: miniohack
    restart: always
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    entrypoint: /bin/sh -c
    command: >
      "
      /usr/bin/minio server /data --console-address ':9001' &
      sleep 5 &&
      mc alias set myminio http://localhost:9000 minio minio123 &&
      (mc ls myminio/hack || mc mb myminio/hack) &&
      mc anonymous set download myminio/hack &&
      wait
      "

  mockservice:
    build:
      context: ./MockService
    environment:
      - POSTGRES_ADDRESS=postgresmock
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - postgresmock
    ports:
      - "8082:8082"

  mainservice:
    build:
      context: ./Main
    environment:
      - POSTGRES_ADDRESS=postgresmain
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - KAFKA_SERVER=kafka:9092
      - MINIO_URL=http://miniohack:9000
    depends_on:
      - miniohack
      - kafka
      - postgresmain
    ports:
      - "8081:8081"

  rtspservice:
    build:
      context: ./RTSPServer
    ports:
      - "8083:8083"
      - "8554:8554"

  photoprocessing:
    build:
      context: ./PhotoProcessing
    depends_on:
      - kafka
      - miniohack
    environment:
      - MINIO_URL=http://miniohack:9000
      - KAFKA_SERVER=kafka:9092
    ports:
      - "8084:8084"

volumes:
  postgresmain:
  postgresmock:
  minio-data:
